void disp_seg(int i)
{
	PORTD=((0x03&seg[i/16])<<4)|((0x03&seg[i%16])<<6);
	PORTB=((0x1C&seg[i/16])>>2)|((0x1C&seg[i%16])<<1);
	PORTC=((0xE0&seg[i/16])>>5)|((0xE0&seg[i%16])>>2);
}


#include <avr/io.h>
#define FOS 16000000UL
#define F_CPU 16000000UL
#include <util/delay.h>
#include<avr/interrupt.h>

unsigned char seg[]={0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7C,0x27,0x7F,0x67,0x77,0x7F,0x39,0x3F,0x79,0x71};
unsigned char count;

void disp_seg(unsigned char i)
{
	PORTD = (seg[i/10] & 0x0F) << 4;
	PORTB = ((seg[i/10] & 0xF0) >> 4) | ((seg[i%10]&0x03)<<4);
	PORTC=((seg[i%10]&0xFC)>>2);
}
void dec_to_hx(unsigned char i)
{
	PORTD = (seg[i/16] & 0x0F) << 4;
	PORTB = ((seg[i/16] & 0xF0) >> 4) | ((seg[i%16]&0x03)<<4);
	PORTC=((seg[i%16]&0xFC)>>2);
}
int main()
{
	DDRB=0x3F;
	DDRC=0x3F;
	DDRD=0xF3;
	while(1)
	{
	if ((PIND&0x04)==0x04)
	{
		count=(count+1)%100;
		disp_seg(count);
		while(PIND&0x04)
		{
		}
		
	}
	if ((PIND&0x08)==0x08)
	{
		dec_to_hx(count);
		while(PIND&0x08)
		{
		continue;
		}
	}
	}
	return 0;
}