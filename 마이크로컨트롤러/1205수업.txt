#include <stdio.h>
#include <avr/io.h>
#define F_CPU 16000000UL
#define FREQ(x) (unsigned int)(16000000/(2*8*(1+x)))
#include <util/delay.h>
#include <avr/interrupt.h>
#define BAUD_9600 103
unsigned int note_freq[7] = {2093,2349,2637,2794,3136,3520,3951};
unsigned char note[7]={'d','f','z','x','c','a','s'};

void tx_char(unsigned char txChar)
{
      while(!(UCSR0A & (1<<UDRE0)));
	UDR0 = txChar;
}

unsigned char send_char=0;

ISR(USART_RX_vect)
{
	unsigned char _rcv=0;
	_rcv=UDR0;
	tx_char(_rcv);
	sei();
}

int main()
{
	unsigned char Rx_char=0;
	cli();

	UBRR0H=(unsigned char)(BAUD_9600>>8);
	UBRR0L=(unsigned char)(BAUD_9600);
	UCSR0A=0x00;
	UCSR0B=(1<<TXEN0)|(1<<RXEN0);
	UCSR0B|=(1<<RXCIE0);
	UCSR0C=(1<<UCSZ01)|(1<<UCSZ00);

	sei();
	while(1)
	{

	}
	return 0;
}
**

#include<stdio.h>
#include<avr/io.h>
#define F_CPU 16000000UL
#include <util/delay.h>
#include<avr/interrupt.h>
#define BAUD_9600  103
#define MAX_BUFF_SIZE 128

//var
unsigned char _buff[MAX_BUFF_SIZE];
unsigned char com_size = 0;
unsigned char sint_flag;

//func
void tx_char(unsigned char txChar);
void Printf(char *fmt, ...);
void tx_str(unsigned char *txStr, int len);
unsigned char command(unsigned char *buff, unsigned char len);

int main(void)
{
 unsigned char buf[MAX_BUFF_SIZE];
 cli();
 UBRR0H = (unsigned char) (BAUD_9600 >>8) ;
 UBRR0L = (unsigned char) BAUD_9600;
 UCSR0A = 0X00;
 UCSR0B = (1<< TXEN0)|  (1<< RXEN0); 
 UCSR0B |=   (1<< RXCIE0);
 UCSR0C = (1<< UCSZ01) | (1<< UCSZ00);
 sei();

 Printf("\n**************************************\n");
 Printf(" Ready to performance\n");
 Printf("CLK's F is 16000000\n");
 Printf("**************************************\n");
 _delay_ms(500);
 Printf("Let's get it started.\n");
 while (1){
  if(sint_flag){  
    _buff[com_size] = '\0';
   if(!command(_buff,com_size)){
    Printf("Param error! \n");
   }
    com_size = 0;
    memset(_buff,'\0',128);
    sint_flag = 0;
  }
 }
}

unsigned char command(unsigned char *buff, unsigned char len)
{
 unsigned char tmp[MAX_BUFF_SIZE];
 unsigned char ret = 0;
 memset(tmp,'\0',MAX_BUFF_SIZE);
 memcpy((unsigned char*)tmp,(unsigned char*)buff,len);
 if(strstr((char*)tmp,"LED_ON_OFF") != NULL){
  //led_on_off(3,400);
  Printf("led on off ! \n");
  ret = 1;
 }else if(strstr((char*)tmp,"LED_ALT") != NULL){
    //led_on_off_alt(3,400);
  Printf("led alt! \n");
  ret = 1;
 }else if(strstr((char*)tmp,"LED_SHIFT") != NULL){
  //led_shift(3);
  Printf("led shift!\n");
  ret = 1;
 }else{
  ret = 0;
 }
 return ret;
}

ISR(USART_RX_vect){
 unsigned char _usart_rcv = 0;
    _usart_rcv = UDR0;
    if(_usart_rcv == '\r' || com_size >= MAX_BUFF_SIZE){
            sint_flag = 1;
     }else{
           _buff[com_size++] = _usart_rcv;
     }
     sei();

}

void Printf(char *fmt, ...)
{
 va_list arg_ptr;
 uint8_t i, len;
 char sText[128];

 /*text buffer*/
 for (i = 0; i < 128; i++) sText[i] = 0;

 va_start(arg_ptr, fmt);
 vsprintf(sText, fmt, arg_ptr);
 va_end(arg_ptr);

 len = strlen(sText);
 for (i = 0; i < len; i++){
  tx_char(sText[i]);
 }
}

void tx_char(unsigned char txChar)
{
 while (!(UCSR0A & (1 << UDRE0)));
 UDR0 = txChar;
}

void tx_str(unsigned char *txStr, int len)
{
 int i;
 for (i = 0; i < len; i++){
  tx_char(txStr[i]);
 }
}


**



